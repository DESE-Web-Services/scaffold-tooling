---
ahoyapi: v2

commands:
  up:
    usage: Build project.
    cmd: docker-compose up -d "$@"

  down:
    usage: Delete project.
    cmd: docker-compose down

  build:
    usage: Build project.
    cmd: docker-compose up -d --build "$@"

  cli:
    usage: Start a shell inside TEST container.
    cmd: docker-compose exec test bash

  composer:
    usage: Start a shell inside TEST container.
    cmd: docker-compose exec -T test composer "$@"

  run:
    usage: Run command inside TEST container.
    cmd: docker-compose exec -T test bash -c "$@"

  drush:
    usage: Run drush commands in TEST container.
    cmd: docker-compose exec -T test drush "$@"

  govcms-deploy:
    usage: Runs deployment commands (updb, cc, set up file_stage_proxy)
    cmd: docker-compose exec -T cli govcms-deploy

  logs:
    usage: Show Docker logs.
    cmd: docker-compose logs "$@"

  ps:
    usage: List running Docker containers.
    cmd: docker-compose ps

  restart:
    usage: Restart Docker containers.
    cmd: docker-compose restart

  stop:
    usage: Stop Docker containers.
    cmd: docker-compose stop "$@"

  install:
    usage: Install the profile.
    cmd: docker-compose exec -T test drush si -y "$@"

  login:
    usage: Login to a website.
    cmd: docker-compose exec -T test drush uli "$@"

  lint:
    usage: Lint code
    cmd: docker-compose exec -T test vendor/bin/phpcs

  test-behat:
    usage: Run Behat tests.
    cmd: docker-compose exec -T test vendor/bin/behat "$@"

  pull:
    usage: Pull latest docker images.
    cmd: docker image ls --format \"{{.Repository}}:{{.Tag}}\" | grep govcms8lagoon/ | grep -v none | xargs -n1 docker pull | cat

  refresh-db:
    usage: Refresh the database container with latest nightly dump.
    cmd: |
      ahoy confirm "Running this command will replace your current database. Are you sure?" &&
      # Run this if confirm returns true
      cat .env | grep MARIADB_DATA_IMAGE | cut -c20- | xargs -n1 docker pull && ahoy up ||
      # Run this if confirm returns false
      echo "OK, probably a wise choice..."

  confirm:
    cmd: |
      read -r -p "$@ [y/N] " response
      if [[ $response = y ]]
      then
        true
      else
        false
      fi
    hide: true
